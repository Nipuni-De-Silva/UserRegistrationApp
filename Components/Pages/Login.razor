@page "/login"
@using UserRegistrationApp.Data
@using UserRegistrationApp.Data.Models
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Extensions.Logging
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@inject ILoggerFactory LoggerFactory
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Sign In - My Note Space</PageTitle>

<div class="auth-container">
    <div class="row w-100 justify-content-center d-flex align-items-center" style="min-height: 100vh;">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow-lg border-0" style="border-radius: 15px;">
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <img src="my-note-space-logo.jpeg" alt="My Note Space Logo" class="mb-3"
                            style="width: 60px; height: 60px; border-radius: 50%; box-shadow: 0 4px 15px rgba(0,0,0,0.2);" />
                        <h3 class="mb-2" style="color: #1e3a8a;"><i class="fas fa-sign-in-alt me-2"></i>Welcome Back
                        </h3>
                        <p class="text-muted small">Sign in to your My Note Space account</p>
                    </div>

                    <form method="post" action="/api/user/blazor-login">
                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                <i class="fas fa-exclamation-triangle me-2"></i>@errorMessage
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(successMessage))
                        {
                            <div class="alert alert-success" role="alert">
                                <i class="fas fa-check-circle me-2"></i>@successMessage
                            </div>
                        }

                        <div class="mb-3">
                            <label for="email" class="form-label">
                                <i class="fas fa-envelope me-2"></i>Email Address
                            </label>
                            <input id="email" name="email" type="email" class="form-control" value="@loginModel.Email"
                                placeholder="Enter your email address" required />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">
                                <i class="fas fa-lock me-2"></i>Password
                            </label>
                            <div class="input-group">
                                <input id="password" name="password" type="@(showPassword ? "text" : "password")"
                                    class="form-control" value="@loginModel.Password" placeholder="Enter your password"
                                    required />
                                <button class="btn btn-outline-secondary" type="button"
                                    @onclick="TogglePasswordVisibility">
                                    <i class="fas @(showPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                </button>
                            </div>
                        </div>

                        <div class="mb-3 form-check">
                            <input id="rememberMe" name="rememberMe" type="checkbox" class="form-check-input"
                                checked="@loginModel.RememberMe" />
                            <label class="form-check-label" for="rememberMe">
                                Remember me
                            </label>
                        </div>

                        <div class="d-grid mb-3">
                            <button type="submit" class="btn btn-primary btn-lg" style="border-radius: 8px;">
                                <i class="fas fa-sign-in-alt me-2"></i>
                                <span>Sign In</span>
                            </button>
                        </div>
                    </form>

                    <hr class="my-3">

                    <div class="text-center">
                        <p class="mb-0 text-muted small">
                            Don't have an account?
                            <a href="/register" class="text-decoration-none fw-bold" style="color: #007bff;">Create
                                Account</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .auth-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: linear-gradient(135deg, #e3e3f4 0%, #cddef7 100%);
        z-index: 1;
        overflow-y: auto;
    }

    .form-control {
        background: rgba(239, 246, 255, 0.9);
        border: 2px solid #3b82f6;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .form-label {
        color: #1e40af;
        font-weight: 600;
        margin-bottom: 8px;
        text-shadow: 0 1px 2px rgba(255, 255, 255, 0.5);
    }

    .form-control:focus {
        background: white;
        border-color: #1d4ed8;
        box-shadow: 0 0 0 0.2rem rgba(59, 130, 246, 0.25);
    }

    .btn-primary {
        background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
        border: none;
        border-radius: 8px;
        padding: 12px 24px;
        font-weight: 600;
        transition: all 0.3s ease;
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 15px rgba(59, 130, 246, 0.4);
        background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
    }

    .form-check-input:checked {
        background-color: #3b82f6;
        border-color: #3b82f6;
    }

    /* Override link color to standard blue */
    a {
        color: #007bff !important;
    }
</style>

@code {
    [Inject] private ILogger<Login> Logger { get; set; } = default!;

    private LoginRequest loginModel = new();
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private bool showPassword = false;

    protected override void OnInitialized()
    {
        Logger.LogInformation("Login component initialized.");

        // Check for error messages in query string
        var uri = new Uri(Navigation.Uri);
        var queryParams = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        if (queryParams.ContainsKey("error"))
        {
            errorMessage = queryParams["error"].ToString();
        }
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }
}
<style>
    .card {
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.98);
    }

    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .btn-primary {
        background: linear-gradient(45deg, #007bff, #0056b3);
        border: none;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 15px rgba(0, 123, 255, 0.4);
    }

    .form-check-input:checked {
        background-color: #007bff;
        border-color: #007bff;
    }
</style>
